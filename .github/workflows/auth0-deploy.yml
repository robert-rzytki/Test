name: Auth0 Environment Migration

on:
  workflow_dispatch:
    inputs:
      sourceEnv:
        description: 'Source Auth0 Environment'
        required: true
        type: choice
        options:
          - dev
          - test
          - staging
          - production
      targetEnv:
        description: 'Target Auth0 Environment'
        required: true
        type: choice
        options:
          - dev
          - test
          - staging
          - production
      format:
        description: 'Export/Import Format'
        required: true
        type: choice
        options:
          - yaml
          - directory
        default: 'yaml'
      includeResources:
        description: 'Resources to include (comma-separated list, leave empty to include all)'
        required: false
        type: string
      excludeResources:
        description: 'Resources to exclude (comma-separated list)'
        required: false
        type: string
      allowDelete:
        description: 'Allow deletion of resources in target environment'
        required: true
        type: boolean
        default: false

jobs:
  migrate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Auth0 Deploy CLI
        run: npm install -g auth0-deploy-cli

      - name: Validate Environment Selection
        if: github.event.inputs.sourceEnv == github.event.inputs.targetEnv
        run: |
          echo "Source and target environments cannot be the same!"
          exit 1

      - name: Create Source Config
        run: |
          cat > source-config.json << EOF
          {
            "AUTH0_DOMAIN": "${{ secrets[format('AUTH0_DOMAIN_{0}', github.event.inputs.sourceEnv)] }}",
            "AUTH0_CLIENT_ID": "${{ secrets[format('AUTH0_CLIENT_ID_{0}', github.event.inputs.sourceEnv)] }}",
            "AUTH0_CLIENT_SECRET": "${{ secrets[format('AUTH0_CLIENT_SECRET_{0}', github.event.inputs.sourceEnv)] }}"
          }
          EOF

      - name: Create Target Config
        run: |
          EXCLUDED_JSON=""
          INCLUDED_JSON=""
          
          if [ ! -z "${{ github.event.inputs.excludeResources }}" ]; then
            EXCLUDED_LIST=$(echo "${{ github.event.inputs.excludeResources }}" | sed 's/,/","/g')
            EXCLUDED_JSON=', "AUTH0_EXCLUDED": ["'$EXCLUDED_LIST'"]'
          fi
          
          if [ ! -z "${{ github.event.inputs.includeResources }}" ]; then
            INCLUDED_LIST=$(echo "${{ github.event.inputs.includeResources }}" | sed 's/,/","/g')
            INCLUDED_JSON=', "AUTH0_INCLUDED_ONLY": ["'$INCLUDED_LIST'"]'
          fi
          
          cat > target-config.json << EOF
          {
            "AUTH0_DOMAIN": "${{ secrets[format('AUTH0_DOMAIN_{0}', github.event.inputs.targetEnv)] }}",
            "AUTH0_CLIENT_ID": "${{ secrets[format('AUTH0_CLIENT_ID_{0}', github.event.inputs.targetEnv)] }}",
            "AUTH0_CLIENT_SECRET": "${{ secrets[format('AUTH0_CLIENT_SECRET_{0}', github.event.inputs.targetEnv)] }}",
            "AUTH0_ALLOW_DELETE": ${{ github.event.inputs.allowDelete }}${EXCLUDED_JSON}${INCLUDED_JSON}
          }
          EOF

      - name: Export from Source Environment
        run: |
          mkdir -p auth0-export
          a0deploy export \
            --config_file=source-config.json \
            --format=${{ github.event.inputs.format }} \
            --output_folder=auth0-export \
            --debug

      - name: Import to Target Environment
        run: |
          if [ "${{ github.event.inputs.format }}" == "yaml" ]; then
            a0deploy import \
              --config_file=target-config.json \
              --input_file=auth0-export/tenant.yaml \
              --debug
          else
            a0deploy import \
              --config_file=target-config.json \
              --input_file=auth0-export \
              --debug
          fi

      - name: Clean up sensitive files
        if: always()
        run: |
          rm -f source-config.json target-config.json
