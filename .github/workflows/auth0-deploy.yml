name: Auth0 Environment Migration

on:
  workflow_dispatch:
    inputs:
      sourceEnv:
        description: 'Source Auth0 Environment'
        required: true
        type: choice
        options:
          - dev
          - test
          - staging
          - production
      targetEnv:
        description: 'Target Auth0 Environment'
        required: true
        type: choice
        options:
          - dev
          - test
          - staging
          - production
      format:
        description: 'Export/Import Format'
        required: true
        type: choice
        options:
          - yaml
          - directory
        default: 'yaml'
      selectionMode:
        description: 'Resource Selection Mode'
        required: true
        type: choice
        options:
          - include_only
          - exclude_only
          - all
        default: 'all'
      # Resource Selection Checkboxes
      actions:
        description: 'Actions'
        required: false
        type: boolean
        default: false
      attackProtection:
        description: 'Attack Protection'
        required: false
        type: boolean
        default: false
      branding:
        description: 'Branding'
        required: false
        type: boolean
        default: false
      clientGrants:
        description: 'Client Grants'
        required: false
        type: boolean
        default: false
      clients:
        description: 'Clients (Applications)'
        required: false
        type: boolean
        default: false
      connections:
        description: 'Connections'
        required: false
        type: boolean
        default: false
      customDomains:
        description: 'Custom Domains'
        required: false
        type: boolean
        default: false
      databases:
        description: 'Databases'
        required: false
        type: boolean
        default: false
      emailProvider:
        description: 'Email Provider'
        required: false
        type: boolean
        default: false
      emailTemplates:
        description: 'Email Templates'
        required: false
        type: boolean
        default: false
      guardianFactors:
        description: 'Guardian Factors'
        required: false
        type: boolean
        default: false
      logStreams:
        description: 'Log Streams'
        required: false
        type: boolean
        default: false
      organizations:
        description: 'Organizations'
        required: false
        type: boolean
        default: false
      pages:
        description: 'Pages'
        required: false
        type: boolean
        default: false
      prompts:
        description: 'Prompts'
        required: false
        type: boolean
        default: false
      resourceServers:
        description: 'Resource Servers (APIs)'
        required: false
        type: boolean
        default: false
      roles:
        description: 'Roles'
        required: false
        type: boolean
        default: false
      tenant:
        description: 'Tenant Settings'
        required: false
        type: boolean
        default: false
      triggers:
        description: 'Triggers'
        required: false
        type: boolean
        default: false
      allowDelete:
        description: 'Allow deletion of resources in target environment'
        required: true
        type: boolean
        default: false

jobs:
  migrate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Auth0 Deploy CLI
        run: npm install -g auth0-deploy-cli

      - name: Validate Environment Selection
        if: github.event.inputs.sourceEnv == github.event.inputs.targetEnv
        run: |
          echo "Source and target environments cannot be the same!"
          exit 1

      - name: Create Source Config
        run: |
          cat > source-config.json << EOF
          {
            "AUTH0_DOMAIN": "${{ secrets[format('AUTH0_DOMAIN_{0}', github.event.inputs.sourceEnv)] }}",
            "AUTH0_CLIENT_ID": "${{ secrets[format('AUTH0_CLIENT_ID_{0}', github.event.inputs.sourceEnv)] }}",
            "AUTH0_CLIENT_SECRET": "${{ secrets[format('AUTH0_CLIENT_SECRET_{0}', github.event.inputs.sourceEnv)] }}"
          }
          EOF

      - name: Create Target Config
        run: |
          # Initialize arrays for selected resources
          SELECTED_RESOURCES=()
          
          # Check which resources are selected
          if [[ "${{ github.event.inputs.actions }}" == "true" ]]; then
            SELECTED_RESOURCES+=("actions")
          fi
          if [[ "${{ github.event.inputs.attackProtection }}" == "true" ]]; then
            SELECTED_RESOURCES+=("attackProtection")
          fi
          if [[ "${{ github.event.inputs.branding }}" == "true" ]]; then
            SELECTED_RESOURCES+=("branding")
          fi
          if [[ "${{ github.event.inputs.clientGrants }}" == "true" ]]; then
            SELECTED_RESOURCES+=("clientGrants")
          fi
          if [[ "${{ github.event.inputs.clients }}" == "true" ]]; then
            SELECTED_RESOURCES+=("clients")
          fi
          if [[ "${{ github.event.inputs.connections }}" == "true" ]]; then
            SELECTED_RESOURCES+=("connections")
          fi
          if [[ "${{ github.event.inputs.customDomains }}" == "true" ]]; then
            SELECTED_RESOURCES+=("customDomains")
          fi
          if [[ "${{ github.event.inputs.databases }}" == "true" ]]; then
            SELECTED_RESOURCES+=("databases")
          fi
          if [[ "${{ github.event.inputs.emailProvider }}" == "true" ]]; then
            SELECTED_RESOURCES+=("emailProvider")
          fi
          if [[ "${{ github.event.inputs.emailTemplates }}" == "true" ]]; then
            SELECTED_RESOURCES+=("emailTemplates")
          fi
          if [[ "${{ github.event.inputs.guardianFactors }}" == "true" ]]; then
            SELECTED_RESOURCES+=("guardianFactors")
          fi
          if [[ "${{ github.event.inputs.logStreams }}" == "true" ]]; then
            SELECTED_RESOURCES+=("logStreams")
          fi
          if [[ "${{ github.event.inputs.organizations }}" == "true" ]]; then
            SELECTED_RESOURCES+=("organizations")
          fi
          if [[ "${{ github.event.inputs.pages }}" == "true" ]]; then
            SELECTED_RESOURCES+=("pages")
          fi
          if [[ "${{ github.event.inputs.prompts }}" == "true" ]]; then
            SELECTED_RESOURCES+=("prompts")
          fi
          if [[ "${{ github.event.inputs.resourceServers }}" == "true" ]]; then
            SELECTED_RESOURCES+=("resourceServers")
          fi
          if [[ "${{ github.event.inputs.roles }}" == "true" ]]; then
            SELECTED_RESOURCES+=("roles")
          fi
          if [[ "${{ github.event.inputs.tenant }}" == "true" ]]; then
            SELECTED_RESOURCES+=("tenant")
          fi
          if [[ "${{ github.event.inputs.triggers }}" == "true" ]]; then
            SELECTED_RESOURCES+=("triggers")
          fi
          
          # Check if any resources are selected
          if [ ${#SELECTED_RESOURCES[@]} -eq 0 ]; then
            # If no resources selected, use the default (all resources)
            MODE_JSON=""
          else
            # Create JSON array from selected resources
            RESOURCES_JSON=$(printf '"%s",' "${SELECTED_RESOURCES[@]}" | sed 's/,$//')
            
            # Apply the selection mode
            if [[ "${{ github.event.inputs.selectionMode }}" == "include_only" ]]; then
              MODE_JSON=', "AUTH0_INCLUDED_ONLY": ['$RESOURCES_JSON']'
            elif [[ "${{ github.event.inputs.selectionMode }}" == "exclude_only" ]]; then
              MODE_JSON=', "AUTH0_EXCLUDED": ['$RESOURCES_JSON']'
            else
              MODE_JSON=""
            fi
          fi
          
          # Create the final config file
          cat > target-config.json << EOF
          {
            "AUTH0_DOMAIN": "${{ secrets[format('AUTH0_DOMAIN_{0}', github.event.inputs.targetEnv)] }}",
            "AUTH0_CLIENT_ID": "${{ secrets[format('AUTH0_CLIENT_ID_{0}', github.event.inputs.targetEnv)] }}",
            "AUTH0_CLIENT_SECRET": "${{ secrets[format('AUTH0_CLIENT_SECRET_{0}', github.event.inputs.targetEnv)] }}",
            "AUTH0_ALLOW_DELETE": ${{ github.event.inputs.allowDelete }}${MODE_JSON}
          }
          EOF
          
          echo "Config created with selection mode: ${{ github.event.inputs.selectionMode }}"
          echo "Selected resources: ${SELECTED_RESOURCES[*]}"

      - name: Export from Source Environment
        run: |
          mkdir -p auth0-export
          a0deploy export \
            --config_file=source-config.json \
            --format=${{ github.event.inputs.format }} \
            --output_folder=auth0-export \
            --debug

      - name: Import to Target Environment
        run: |
          if [ "${{ github.event.inputs.format }}" == "yaml" ]; then
            a0deploy import \
              --config_file=target-config.json \
              --input_file=auth0-export/tenant.yaml \
              --debug
          else
            a0deploy import \
              --config_file=target-config.json \
              --input_file=auth0-export \
              --debug
          fi

      - name: Clean up sensitive files
        if: always()
        run: |
          rm -f source-config.json target-config.json
